{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/index.js","store.js","containers/Home.js","containers/Login.js","actions/auth.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","hoc/Layout.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","acess","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Home","connect","login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","data","get","useState","formData","setFormData","onChange","e","target","name","value","className","onSubmit","preventDefault","placeholder","required","minLength","to","Signup","Activate","ResetPassword","ResetPasswordConfirm","Layout","props","children","App","exact","path","component","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bd2a66a.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL\n} from '../actions/types';\n\nconst initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  user: null\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access);\n\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh\n      };\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        user: payload\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null\n      };\n\n    case LOGIN_FAIL:\n      localStorage.removeItem('access', payload.access);\n      localStorage.removeItem('refresh', payload.refresh);\n      return {\n        ...state,\n        acess: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n  auth\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\n\nconst Home = () => <div>Home</div>;\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { login } from '../actions/auth';\n\nconst Login = ({login}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    login(email, password);\n    //Is the user authenticated?\n    //Redirect to the home page\n  };\n\n  \n\n  return (\n    <div className=\"container mt-5\">\n      <h1> Sign in </h1>\n      <p>Sign into your account </p>\n      <form onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control mb-3\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={e => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Login\n        </button>\n      </form>\n      <p className=\"mt-3\">\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n      </p>\n      <p className=\"mt-3\">\n        Forgot your password? <Link to=\"reset-password\">Reset Password</Link>\n      </p>\n    </div>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   //is authenticated?\n// });\n\nexport default connect(null, {login})(Login);\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL\n} from './types';\n\nimport axios from 'axios'\n\nexport const load_user = () => async dispatch => {\n  if(localStorage.getItem('access')){\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization':`JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n  \n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n      \n    } catch (error) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n\n  } else {\n      dispatch({\n        type: USER_LOADED_FAIL\n      })\n\n  }\n};\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(load_user())\n    \n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n","import React from 'react';\n\nconst Signup = () => <div>Signup</div>;\n\nexport default Signup;\n","import React from 'react';\n\nconst Activate = () => <div> Activateme</div>;\n\nexport default Activate;\n","import React from 'react';\n\nconst ResetPassword = () => <div>ResetPassword</div>;\n\nexport default ResetPassword;\n","import React from 'react';\n\nconst ResetPasswordConfirm = () => <div>ResetPasswordConfirm</div>;\n\nexport default ResetPasswordConfirm;\n","import React from 'react';\nimport Navbar from '../components/Navbar';\n\nconst Layout = props => (\n  <div>\n    NAVBAR\n    {props.children}\n  </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\nimport Layout from './hoc/Layout';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/reset-password\" component={ResetPassword} />\n          <Route\n            exact\n            path=\"/password/reset/confirm/:uid/:token\"\n            component={ResetPasswordConfirm}\n          />\n          <Route exact path=\"/activate/:uid/:token\" component={Activate} />\n        </Switch>\n      </Layout>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}